<?php
/**
 * @var \CoutureSearch\SearchAPI\Block\Adminhtml\System\Config\Sync $block
 */
?>

<!-- Add a <style> block to inject our custom CSS for a better UI -->
<style>
    /* --- Main Container Fix --- */
    /* This forces the container to take up the full width and adds padding */
    .sync-controls-wrapper {
        width: 100%;
        padding: 20px; /* ADDED: Overall padding for the entire component */
        box-sizing: border-box; /* Ensures padding doesn't break the layout */
    }

    /* --- Header Styling (Title and Refresh Button) --- */
    .sync-status-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }
    .sync-status-header h4 {
        font-size: 16px;
        margin: 0; /* Remove default margin */
    }

    /* --- Main Sync Button --- */
    #couture_sync_button {
        background-color: #007bff;
        color: white;
        font-weight: bold;
        border-radius: 5px;
        padding: 10px 15px;
        font-size: 14px;
        border: none;
    }
    #couture_sync_button:hover {
        background-color: #0056b3;
    }

    /* --- Table Styling --- */
    .sync-status-container {
        margin-top: 20px;
    }
    #sync_status_table {
        width: 100%;
        border-collapse: collapse;
    }
    #sync_status_table th, #sync_status_table td {
        border: 1px solid #ccc;
        padding: 10px;
        text-align: left;
    }
    /* FIX: Make table headers visible */
    #sync_status_table th {
        background-color: #f2f2f2;
        font-weight: bold;
        color: #333;
    }

    /* --- Status Colors --- */
    .status-badge {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 12px;
        color: white;
        font-weight: bold;
        font-size: 12px;
    }
    .status-success { background-color: #28a745; }
    .status-failed { background-color: #dc3545; }
    .status-processing { background-color: #17a2b8; }
    .status-queued { background-color: #ffc107; color: #333; }
    .status-cancelled { background-color: #6c757d; }

</style>

<!-- Add a wrapper div to help with full-width layout -->
<div class="sync-controls-wrapper">
    <div style="margin-bottom: 20px;">
        <?= $block->getButtonHtml() ?>
        <p class="note">
            <span>Click this button to start a full catalogue sync. This process runs in the background.</span>
        </p>
    </div>

    <div class="sync-status-container">
        <!-- Add a header div for flexbox layout -->
        <div class="sync-status-header">
            <h4>Previous Sync Requests</h4>
            <button id="couture_refresh_button" class="action-secondary">Refresh</button>
        </div>
        <table id="sync_status_table" class="data-grid">
            <thead>
                <tr>
                    <th>Request ID</th>
                    <th>Status</th>
                    <th>Message</th>
                    <th>Created At</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="5">Click "Refresh" to see the latest sync status.</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script>
require(['jquery'], function($){
    // Function to start the sync
    window.check = function() {
        $.ajax({
            url: '<?= $block->escapeUrl($block->getAjaxUrl()) ?>',
            type: 'GET',
            showLoader: true,
            success: function(response) {
                if (response.error) {
                    alert(response.message);
                } else {
                    alert(response.message || 'Request sent.');
                }
                refreshStatus();
            },
            error: function(jqXHR) {
                alert('An error occurred. Check the browser console (F12) for details.');
                console.error('AJAX Error:', jqXHR.responseText);
            }
        });
    };

    // Function to cancel a sync
    function cancelSync(syncId) {
        if (!confirm('Are you sure you want to cancel this sync request?')) {
            return;
        }
        $.ajax({
            url: '<?= $block->escapeUrl($block->getCancelUrl()) ?>',
            type: 'POST',
            data: { id: syncId, form_key: window.FORM_KEY }, // Send form_key for POST requests
            showLoader: true,
            success: function(response) {
                alert(response.message || 'Cancellation request sent.');
                refreshStatus();
            },
            error: function() {
                alert('An error occurred while trying to cancel the sync.');
            }
        });
    }

    // Helper to get the correct CSS class for each status
    function getStatusClass(status) {
        switch(status.toLowerCase()) {
            case 'success': return 'status-success';
            case 'failed': return 'status-failed';
            case 'processing': return 'status-processing';
            case 'queued': return 'status-queued';
            case 'cancelled': return 'status-cancelled';
            default: return '';
        }
    }

    // Function to refresh the status table
    function refreshStatus() {
        $.ajax({
            url: '<?= $block->escapeUrl($block->getRefreshUrl()) ?>',
            type: 'GET',
            showLoader: true,
            success: function(response) {
                var tableBody = $('#sync_status_table tbody');
                tableBody.empty();
                if (response.history && response.history.length) {
                    response.history.forEach(function(item) {
                        var actionsHtml = '';
                        if (item.status === 'Queued' || item.status === 'Processing') {
                            actionsHtml = '<button class="action-secondary cancel-sync-btn" data-id="' + item.entity_id + '">Cancel</button>';
                        }

                        // Use the helper to create a styled status badge
                        var statusHtml = '<span class="status-badge ' + getStatusClass(item.status) + '">' + item.status + '</span>';

                        var row = '<tr>' +
                            '<td>' + item.request_id + '</td>' +
                            '<td>' + statusHtml + '</td>' +
                            '<td>' + (item.message || '') + '</td>' +
                            '<td>' + item.created_at + '</td>' +
                            '<td>' + actionsHtml + '</td>' +
                            '</tr>';
                        tableBody.append(row);
                    });
                } else {
                    tableBody.html('<tr><td colspan="5">No sync requests found.</td></tr>');
                }
            }
        });
    }

    // Attach click handler to the refresh button
    $('#couture_refresh_button').on('click', function() {
        refreshStatus();
    });

    // Attach a delegated click handler for the cancel buttons
    $('#sync_status_table').on('click', '.cancel-sync-btn', function() {
        var syncId = $(this).data('id');
        cancelSync(syncId);
    });

    // Initial load of the status
    refreshStatus();
});
</script>
